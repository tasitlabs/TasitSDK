(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{111:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return c})),a.d(t,"rightToc",(function(){return s})),a.d(t,"default",(function(){return b}));var n=a(2),r=a(6),i=(a(0),a(119)),o={id:"other-features",title:"Other features",sidebar_label:"Other features"},c={id:"other-features",isDocsHomePage:!1,title:"Other features",description:"- Onboarding",source:"@site/docs/OtherFeatures.md",permalink:"/docs/other-features",editUrl:"https://github.com/tasitlabs/tasit-sdk/tree/develop/packages/docs/docs/OtherFeatures.md",sidebar_label:"Other features",sidebar:"docs",previous:{title:"Project layout",permalink:"/docs/project-layout"},next:{title:"Contact",permalink:"/docs/contact"}},s=[{value:"Onboarding",id:"onboarding",children:[]},{value:"Ongoing UX",id:"ongoing-ux",children:[]},{value:"Mobile features",id:"mobile-features",children:[]},{value:"Advanced features",id:"advanced-features",children:[]},{value:"DevEx",id:"devex",children:[]},{value:"Future features",id:"future-features",children:[]}],l={rightToc:s};function b(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},l,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#onboarding"}),"Onboarding"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#fiat-onramps"}),"Fiat onramps")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#ongoing-ux"}),"Ongoing UX"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#the-graph"}),"The Graph")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#ens"}),"ENS")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#meta-transactions"}),"Meta-transactions")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#mobile-features"}),"Mobile features"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#push-notifications"}),"Push notifications")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#biometric-auth"}),"Biometric auth")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#deep-linking"}),"Deep linking")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#advanced-features"}),"Advanced features"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#for-users-that-do-have-funds"}),"For users that do have funds")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#devex"}),"DevEx"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#support-for-popular-erc-standards"}),"Support for popular ERC standards")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#configurable-json-rpc-client"}),"Configurable JSON-RPC client")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#future-features"}),"Future features"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#eth-20-support"}),"Eth 2.0 support")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#l2-support"}),"L2 support")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#automatic-scaffolding-using-the-tasit-cli"}),"Automatic scaffolding using the Tasit CLI")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#a-library-of-native-mobile-dapp-components"}),"A library of native mobile dapp components"))))),Object(i.b)("h2",{id:"onboarding"},"Onboarding"),Object(i.b)("h4",{id:"fiat-onramps"},"Fiat onramps"),Object(i.b)("p",null,"Simple integration of fiat onramps that let users use Apple Pay and Google pay"),Object(i.b)("h2",{id:"ongoing-ux"},"Ongoing UX"),Object(i.b)("h4",{id:"the-graph"},"The Graph"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),'const action = contract.safeTransferfrom(/*...*/);\naction.on("error", errorListener);\naction.on("presentInTheGraph", successListener);\naction.send(); // broadcast\n// ...\n')),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"(And of course more standard things like querying for a lot of indexed events)")),Object(i.b)("h4",{id:"ens"},"ENS"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Sending")),Object(i.b)("p",null,"somebodyelse.eth"),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"(ethers.js under the hood)")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Receiving")),Object(i.b)("p",null,"paul.uniswap.eth\npaul.gitcoin.eth\npaul.tasit.eth"),Object(i.b)("h4",{id:"meta-transactions"},"Meta-transactions"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),'const action = contract.myFavoriteMethod(/*...*/);\naction.on("error", errorListener);\naction.on("enoughConfirmations", successListener);\naction.sendForFree(); // meta-tx broadcast\n\n// ...\n')),Object(i.b)("p",null,"The approach with meta-transactions is that the user's account is only used to sign messages, and then as a developer you can use your preferred centralized or decentralized solution to relay that as an Ethereum tx and pay and/or be rewarded as each solution sees fit."),Object(i.b)("h2",{id:"mobile-features"},"Mobile features"),Object(i.b)("h4",{id:"push-notifications"},"Push notifications"),Object(i.b)("h4",{id:"biometric-auth"},"Biometric auth"),Object(i.b)("h4",{id:"deep-linking"},"Deep linking"),Object(i.b)("h2",{id:"advanced-features"},"Advanced features"),Object(i.b)("h4",{id:"for-users-that-do-have-funds"},"For users that do have funds"),Object(i.b)("p",null,"Connects with your preferred mobile Ethereum wallet. Using ERC20+721 approvals or ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://walletconnect.org/"}),"WalletConnect"),"."),Object(i.b)("p",null,"Users can continue to keep their funds in a proper wallet with better security guarantees if they do already have ETH, tokens, etc. and use them with this dapp."),Object(i.b)("p",null,"A user flow where a dapp's ephemeral account requests an approval for X ERC20 tokens of type A or one ERC721 token of type B is supported in the SDK."),Object(i.b)("p",null,"Through compatibility with WalletConnect, any standalone dapp can be authorized to take actions in a way that has only been possible in wallet apps to date. The wallet might be the Gnosis Safe personal edition, Status, Coinbase Wallet, Argent, etc."),Object(i.b)("p",null,"For more info, see ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/packages/link-wallet/"}),Object(i.b)("inlineCode",{parentName:"a"},"@tasit/link-wallet")),"."),Object(i.b)("h2",{id:"devex"},"DevEx"),Object(i.b)("h4",{id:"support-for-popular-erc-standards"},"Support for popular ERC standards"),Object(i.b)("p",null,"One class of smart contracts we support is ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"http://erc721.org/"}),"NFTs"),". There\u2019s an ERC-standard-specific JavaScript/TypeScript API wrapping the lower-level Tasit API for reading and writing and listening for data so that the function-names in Tasit are tailored to that type of dapp. As long as we\u2019ve built the tooling to interact with that class of dapp at least once before, Tasit can \u201cautomagically\u201d support any new dapp of that type."),Object(i.b)("p",null,"We also track the latest ABI and interface address for the most well-known dapp projects directly via their open-source GitHub repos."),Object(i.b)("p",null,"For more info, see ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/packages/contracts/"}),Object(i.b)("inlineCode",{parentName:"a"},"@tasit/contracts")),"."),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"This makes it simpler to customize the autogenerated app for a certain ERC standard and swap it to use with your own smart contracts or the already-on-chain smart contracts for a different dapp of that same ERC-type. This also means there\u2019s a network effect for Tasit, so once we have a few apps using it, it will be much faster to make new apps with it.")),Object(i.b)("h4",{id:"configurable-json-rpc-client"},"Configurable JSON-RPC client"),Object(i.b)("p",null,"We realize that different developers have different takes on whether it's an acceptable compromise to use Infura in the way that MetaMask does in the browser or whether a local Ethereum light client is warranted more like in the original version of Status or Augur. We anticipate that in the short term, almost all developers using this SDK will use Infura. It's a good stopgap solution for now."),Object(i.b)("p",null,"We leave the JSON-RPC provider configurable so that the SDK doesn't take an opinionated stance on this."),Object(i.b)("p",null,"There are a couple projects working to make it simple to spin up your own high-availability, high-performance JSON-RPC client(s) (including Infura) or to use a decentralized and incentivized network of full nodes, so that should decentralize things a bit until we get to Eth 2.0. See ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://dappnode.io/"}),"DAppNode"),", ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/ChainSafeSystems/denode"}),"denode"),", ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://vipnode.org/"}),"Vipnode"),", and ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://slock.it/incubed.html"}),"Incubed")," by slock.it."),Object(i.b)("p",null,Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/packages/action/"}),Object(i.b)("inlineCode",{parentName:"a"},"@tasit/action")," is the child package")," that implements these features for Tasit."),Object(i.b)("h2",{id:"future-features"},"Future features"),Object(i.b)("p",null,"We have no plans until Eth 2.0 to make a special abstraction for running a local light geth node like Status did originally. Tasit works with whatever JSON-RPC client you point it at, but we won't be adding an abstraction for using a light client within the native mobile dapp until Eth 2.0. People have had too many issues with this on mobile: dropped network connections, using all disk space, battery usage, etc."),Object(i.b)("p",null,"Looking towards the future, light and ultralight client projects we're tracking for first-class support in this SDK include:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"https://nimbus.status.im/"}),"Nimbus")," by Status"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"https://www.musteka.la/"}),"Mustekala")," by MetaMask"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"https://github.com/paritytech/js-libs/tree/master/packages/light.js"}),"LightJS")," by Parity")),Object(i.b)("h4",{id:"eth-20-support"},"Eth 2.0 support"),Object(i.b)("p",null,"Tasit will work with the Ethereum 2.0 release. We support Ethereum-based dapps to start, and in the long run Tasit will work with any blockchain that uses EVM and/or eWASM."),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"In order for Tasit to make a difference for current and future users of Ethereum, it will need to support future versions of the EVM.")),Object(i.b)("h4",{id:"l2-support"},"L2 support"),Object(i.b)("p",null,"We're keeping an eye on various zk rollup projects and optimistic rollup projects like the OVM by ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://optimism.io/"}),"Optimism"),"."),Object(i.b)("h4",{id:"automatic-scaffolding-using-the-tasit-cli"},"Automatic scaffolding using the Tasit CLI"),Object(i.b)("p",null,"Are you starting a project from scratch? Let the Tasit CLI scaffold out your project for you."),Object(i.b)("p",null,"The Decentraland app generated using ",Object(i.b)("inlineCode",{parentName:"p"},"tasit init --nft")," ship with styled-but-customizable React Native components for using each feature of the dapp, leveraging the js middleware."),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"This also makes the experience for new developers working on a mobile app with Tasit simpler, which also means more mobile dapps for end users.")),Object(i.b)("h4",{id:"a-library-of-native-mobile-dapp-components"},"A library of native mobile dapp components"),Object(i.b)("hr",null),Object(i.b)("p",null,Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/introduction"}),"Go back")," to the home page of the docs."))}b.isMDXComponent=!0},119:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return d}));var n=a(0),r=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=r.a.createContext({}),b=function(e){var t=r.a.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},p=function(e){var t=b(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},h=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=b(a),h=n,d=p["".concat(o,".").concat(h)]||p[h]||u[h]||i;return a?r.a.createElement(d,c(c({ref:t},l),{},{components:a})):r.a.createElement(d,c({ref:t},l))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=h;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:n,o[1]=c;for(var l=2;l<i;l++)o[l]=a[l];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,a)}h.displayName="MDXCreateElement"}}]);