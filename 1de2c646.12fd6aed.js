(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{108:function(e,n,t){"use strict";t.d(n,"a",(function(){return l})),t.d(n,"b",(function(){return b}));var a=t(0),r=t.n(a),i=r.a.createContext({}),o=function(e){var n=r.a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):Object.assign({},n,e)),t},l=function(e){var n=o(e.components);return r.a.createElement(i.Provider,{value:n},e.children)};var p="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},s=Object(a.forwardRef)((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=function(e,n){var t={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&-1===n.indexOf(a)&&(t[a]=e[a]);return t}(e,["components","mdxType","originalType","parentName"]),s=o(t),b=a,u=s[l+"."+b]||s[b]||c[b]||i;return t?r.a.createElement(u,Object.assign({},{ref:n},p,{components:t})):r.a.createElement(u,Object.assign({},{ref:n},p))}));function b(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=s;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[p]="string"==typeof e?e:a,o[1]=l;for(var b=2;b<i;b++)o[b]=t[b];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,t)}s.displayName="MDXCreateElement"},92:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"rightToc",(function(){return o})),t.d(n,"default",(function(){return c}));t(0);var a=t(108);function r(){return(r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}const i={id:"publishing",title:"(Internal docs) Publishing",sidebar_label:"(Internal docs) Publishing"},o=[{value:"Publishing new versions",id:"publishing-new-versions",children:[]}],l={rightToc:o},p="wrapper";function c({components:e,...n}){return Object(a.b)(p,r({},l,n,{components:e,mdxType:"MDXLayout"}),Object(a.b)("h3",{id:"publishing-new-versions"},"Publishing new versions"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Note: This doc is mainly useful for the Tasit team to publish new versions of the Tasit SDK, not for a team using the Tasit SDK.")),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Create a publish issue on GitHub (with the desired new version number in the name).")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Create a new branch (e.g. ",Object(a.b)("inlineCode",{parentName:"p"},"feature/publish-1-2-3"),") from an updated ",Object(a.b)("inlineCode",{parentName:"p"},"develop")," branch.")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Run ",Object(a.b)("inlineCode",{parentName:"p"},"npm run publish")," script"),Object(a.b)("p",{parentName:"li"},"This script will clean packages, install dependencies, compile and test all packages. If all these steps run without error, the ",Object(a.b)("inlineCode",{parentName:"p"},"lerna publish")," routine will be called and a prompt will be shown:"))),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{}),"```\n? Select a new version (currently 0.0.7) (Use arrow keys)\n\u276f Patch (0.0.8)\n  Minor (0.1.0)\n  Major (1.0.0)\n  Prepatch (0.0.8-alpha.0)\n  Preminor (0.1.0-alpha.0)\n  Premajor (1.0.0-alpha.0)\n  Custom Prerelease\n  Custom Version\n```\n")),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"After the selection of the correct option, the packages that are about to have new versions published are listed:")),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{}),"```\n? Select a new version (currently 0.0.7) Patch (0.0.8)\n\nChanges:\n - tasit-account: 0.0.7 => 0.0.8\n - tasit-action: 0.0.7 => 0.0.8\n - tasit-contracts: 0.0.7 => 0.0.8\n - tasit-sdk: 0.0.7 => 0.0.8\n\n? Are you sure you want to publish these packages? (ynH)\n```\n")),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"If that's correct, press ",Object(a.b)("inlineCode",{parentName:"p"},"y")," to publish the packages.")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"During the publishing process, Lerna will update the ",Object(a.b)("inlineCode",{parentName:"p"},"package.json")," files with the new version and push changes to the GitHub repository (and to npm, of course).")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"If that was successful, create a new PR that auto-closes the issue created in step 1."))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Troubleshooting")),Object(a.b)("p",null,"Sometimes during the ",Object(a.b)("inlineCode",{parentName:"p"},"lerna bootstrap")," process, the file ",Object(a.b)("inlineCode",{parentName:"p"},"package-lock.json")," can be changed, and that will make ",Object(a.b)("inlineCode",{parentName:"p"},"lerna publish")," abort. Publishing will only be done if there are no unstaged files in the ",Object(a.b)("inlineCode",{parentName:"p"},"git")," repo. To solve that, commit the file and run the ",Object(a.b)("inlineCode",{parentName:"p"},"publish")," script again."),Object(a.b)("hr",null),Object(a.b)("p",null,Object(a.b)("a",r({parentName:"p"},{href:"/docs/home"}),"Go back to the home page of the docs")))}c.isMDXComponent=!0}}]);